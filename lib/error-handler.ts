import { toast } from '@/hooks/use-toast';

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—à–∏–±–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
export interface AppError {
  message: string;
  code?: string | undefined;
  details?: any;
  context?: string | undefined;
  timestamp?: Date | undefined;
  stack?: string | undefined;
}

/**
 * –¢–∏–ø—ã –æ—à–∏–±–æ–∫ –¥–ª—è –ª—É—á—à–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏
 */
export enum ErrorType {
  NETWORK = 'NETWORK',
  VALIDATION = 'VALIDATION',
  AUTHENTICATION = 'AUTHENTICATION',
  AUTHORIZATION = 'AUTHORIZATION',
  NOT_FOUND = 'NOT_FOUND',
  SERVER = 'SERVER',
  CLIENT = 'CLIENT',
  UNKNOWN = 'UNKNOWN',
}

/**
 * –ö–æ–¥—ã –æ—à–∏–±–æ–∫ –¥–ª—è —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
 */
export enum ErrorCode {
  // –°–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏
  NETWORK_TIMEOUT = 'NETWORK_TIMEOUT',
  NETWORK_OFFLINE = 'NETWORK_OFFLINE',
  NETWORK_REQUEST_FAILED = 'NETWORK_REQUEST_FAILED',

  // –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  VALIDATION_REQUIRED = 'VALIDATION_REQUIRED',
  VALIDATION_INVALID_FORMAT = 'VALIDATION_INVALID_FORMAT',
  VALIDATION_TOO_LONG = 'VALIDATION_TOO_LONG',
  VALIDATION_TOO_SHORT = 'VALIDATION_TOO_SHORT',

  // –û—à–∏–±–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  AUTH_INVALID_CREDENTIALS = 'AUTH_INVALID_CREDENTIALS',
  AUTH_TOKEN_EXPIRED = 'AUTH_TOKEN_EXPIRED',
  AUTH_TOKEN_INVALID = 'AUTH_TOKEN_INVALID',

  // –û—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  AUTH_INSUFFICIENT_PERMISSIONS = 'AUTH_INSUFFICIENT_PERMISSIONS',
  AUTH_ACCESS_DENIED = 'AUTH_ACCESS_DENIED',

  // –û—à–∏–±–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
  RESOURCE_NOT_FOUND = 'RESOURCE_NOT_FOUND',
  RESOURCE_ALREADY_EXISTS = 'RESOURCE_ALREADY_EXISTS',

  // –°–µ—Ä–≤–µ—Ä–Ω—ã–µ –æ—à–∏–±–∫–∏
  SERVER_INTERNAL_ERROR = 'SERVER_INTERNAL_ERROR',
  SERVER_SERVICE_UNAVAILABLE = 'SERVER_SERVICE_UNAVAILABLE',

  // –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –æ—à–∏–±–∫–∏
  CLIENT_INVALID_INPUT = 'CLIENT_INVALID_INPUT',
  CLIENT_BROWSER_NOT_SUPPORTED = 'CLIENT_BROWSER_NOT_SUPPORTED',

  // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏
  UNKNOWN_ERROR = 'UNKNOWN_ERROR',
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
 * @param error - –û—à–∏–±–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
 * @param context - –ö–æ–Ω—Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
 * @returns –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
 */
export function handleError(error: unknown, context?: string): AppError {
  let appError: AppError;

  if (error instanceof Error) {
    appError = {
      message: error.message,
      details: error.stack,
      stack: error.stack,
      context,
      timestamp: new Date(),
    };
  } else if (typeof error === 'string') {
    appError = {
      message: error,
      context,
      timestamp: new Date(),
    };
  } else if (error && typeof error === 'object' && 'message' in error) {
    appError = {
      message: String(error.message),
      details: error,
      context,
      timestamp: new Date(),
    };
  } else {
    appError = {
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      details: error,
      context,
      timestamp: new Date(),
    };
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  appError.code = determineErrorCode(appError.message, context);

  // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  logError(appError);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  showErrorNotification(appError);

  return appError;
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–¥ –æ—à–∏–±–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
 * @param message - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏
 * @param context - –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
 * @returns –ö–æ–¥ –æ—à–∏–±–∫–∏
 */
function determineErrorCode(message: string, context?: string): string {
  const lowerMessage = message.toLowerCase();
  const lowerContext = context?.toLowerCase() || '';

  // –°–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏
  if (
    lowerMessage.includes('network') ||
    lowerMessage.includes('fetch') ||
    lowerMessage.includes('http')
  ) {
    if (lowerMessage.includes('timeout')) return ErrorCode.NETWORK_TIMEOUT;
    if (lowerMessage.includes('offline') || lowerMessage.includes('connection'))
      return ErrorCode.NETWORK_OFFLINE;
    return ErrorCode.NETWORK_REQUEST_FAILED;
  }

  // –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  if (
    lowerMessage.includes('validation') ||
    lowerMessage.includes('invalid') ||
    lowerMessage.includes('required')
  ) {
    if (lowerMessage.includes('required')) return ErrorCode.VALIDATION_REQUIRED;
    if (lowerMessage.includes('format')) return ErrorCode.VALIDATION_INVALID_FORMAT;
    if (lowerMessage.includes('too long')) return ErrorCode.VALIDATION_TOO_LONG;
    if (lowerMessage.includes('too short')) return ErrorCode.VALIDATION_TOO_SHORT;
    return ErrorCode.VALIDATION_REQUIRED;
  }

  // –û—à–∏–±–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  if (
    lowerMessage.includes('auth') ||
    lowerMessage.includes('login') ||
    lowerMessage.includes('token')
  ) {
    if (lowerMessage.includes('expired')) return ErrorCode.AUTH_TOKEN_EXPIRED;
    if (lowerMessage.includes('invalid')) return ErrorCode.AUTH_TOKEN_INVALID;
    return ErrorCode.AUTH_INVALID_CREDENTIALS;
  }

  // –û—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  if (
    lowerMessage.includes('permission') ||
    lowerMessage.includes('access') ||
    lowerMessage.includes('denied')
  ) {
    return ErrorCode.AUTH_ACCESS_DENIED;
  }

  // –û—à–∏–±–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
  if (lowerMessage.includes('not found') || lowerMessage.includes('404')) {
    return ErrorCode.RESOURCE_NOT_FOUND;
  }

  // –°–µ—Ä–≤–µ—Ä–Ω—ã–µ –æ—à–∏–±–∫–∏
  if (
    lowerMessage.includes('server') ||
    lowerMessage.includes('500') ||
    lowerMessage.includes('internal')
  ) {
    return ErrorCode.SERVER_INTERNAL_ERROR;
  }

  return ErrorCode.UNKNOWN_ERROR;
}

/**
 * –õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
 * @param error - –û—à–∏–±–∫–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function logError(error: AppError): void {
  const logData = {
    message: error.message,
    code: error.code,
    context: error.context,
    timestamp: error.timestamp?.toISOString(),
    stack: error.stack,
    details: error.details,
  };

  // –í development —Ä–µ–∂–∏–º–µ –≤—ã–≤–æ–¥–∏–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  if (process.env.NODE_ENV === 'development') {
    console.group(`üö® Error${error.context ? ` in ${error.context}` : ''}`);
    console.error('Error Details:', logData);
    console.groupEnd();
  } else {
    // –í production –ª–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    console.error(`Error${error.context ? ` in ${error.context}` : ''}:`, error.message);
  }

  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –æ—à–∏–±–æ–∫ –≤ —Å–µ—Ä–≤–∏—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  // –Ω–∞–ø—Ä–∏–º–µ—Ä, Sentry, LogRocket, etc.
  // sendToErrorTracking(logData)
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * @param error - –û—à–∏–±–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
function showErrorNotification(error: AppError): void {
  const getErrorMessage = (error: AppError): string => {
    switch (error.code) {
      case ErrorCode.NETWORK_TIMEOUT:
        return '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞';
      case ErrorCode.NETWORK_OFFLINE:
        return '–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É';
      case ErrorCode.NETWORK_REQUEST_FAILED:
        return '–û—à–∏–±–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞';
      case ErrorCode.VALIDATION_REQUIRED:
        return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è';
      case ErrorCode.VALIDATION_INVALID_FORMAT:
        return '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö';
      case ErrorCode.AUTH_INVALID_CREDENTIALS:
        return '–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ';
      case ErrorCode.AUTH_TOKEN_EXPIRED:
        return '–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞';
      case ErrorCode.AUTH_ACCESS_DENIED:
        return '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω';
      case ErrorCode.RESOURCE_NOT_FOUND:
        return '–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π —Ä–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω';
      case ErrorCode.SERVER_INTERNAL_ERROR:
        return '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞';
      default:
        return error.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
    }
  };

  toast({
    title: '–û—à–∏–±–∫–∞',
    description: getErrorMessage(error),
    variant: 'destructive',
    duration: 5000,
  });
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏
 * @param promise - Promise –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
 * @param context - –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏
 * @returns Promise —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 */
export function handleAsyncError<T>(promise: Promise<T>, context?: string): Promise<T> {
  return promise.catch(error => {
    handleError(error, context);
    throw error;
  });
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é-–æ–±–µ—Ä—Ç–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
 * @param fn - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
 * @param context - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏
 * @returns –§—É–Ω–∫—Ü–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 */
export function withErrorHandling<T extends (...args: any[]) => any>(
  fn: T,
  context?: string
): (...args: Parameters<T>) => ReturnType<T> {
  return (...args: Parameters<T>): ReturnType<T> => {
    try {
      const result = fn(...args);
      if (result instanceof Promise) {
        return handleAsyncError(result, context) as ReturnType<T>;
      }
      return result;
    } catch (error) {
      handleError(error, context);
      throw error;
    }
  };
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π
 * @param error - –û—à–∏–±–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns true –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è
 */
export function isCriticalError(error: AppError): boolean {
  const criticalCodes = [
    ErrorCode.SERVER_INTERNAL_ERROR,
    ErrorCode.NETWORK_OFFLINE,
    ErrorCode.AUTH_TOKEN_EXPIRED,
  ];
  return criticalCodes.includes(error.code as ErrorCode);
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
 * @param error - –û—à–∏–±–∫–∞
 * @returns –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 */
export function getUserFriendlyMessage(error: AppError): string {
  const messages: Record<string, string> = {
    [ErrorCode.NETWORK_TIMEOUT]: '–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
    [ErrorCode.NETWORK_OFFLINE]: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.',
    [ErrorCode.VALIDATION_REQUIRED]: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.',
    [ErrorCode.AUTH_INVALID_CREDENTIALS]: '–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å.',
    [ErrorCode.RESOURCE_NOT_FOUND]: '–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.',
    [ErrorCode.SERVER_INTERNAL_ERROR]: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
  };

  return messages[error.code || ''] || error.message || '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.';
}
